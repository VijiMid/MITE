Compiler checks method signature for duplicate methods or for method overloading. method signature consist of three things,
 1) Method Name   2) Number Of Arguments   3) Types of arguments.


If these three things are same for any two methods in a class, then compiler gives duplicate method error.

Compiler first checks method name. 

If it is same, then it checks number of arguments. 
If methods differs in number of arguments, then it does not check types of argument. 

It treats as methods are overloaded.

 If number of arguments are same then compiler checks types of arguments. 

If types of arguments are also same, then compiler will give duplicate method error.

 If types of arguments are not same, then compiler will treat them as methods are overloaded.

For duplication, compiler checks only method signature not return types. If method signature is same, straight away it gives duplicate method error.

Overloaded methods may have same access modifiers or different access modifiers. It also does not effect method overloading.
