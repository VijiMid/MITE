java.lang.String                     (From JDK 1.0) - immutable 

java.lang.StringBuffer            (From JDK 1.5)
java.lang.StringBuilder           (From JDK 1.5)

1) All these three classes are members of java.lang package and they are final classes. 
That means you can’t create subclasses to these three classes.

2) All three classes implement Serializable and CharSequence interface.

3) java.lang.String objects are immutable in java. 
That is, once you create String objects, you can’t modify them. 
Whenever you try to modify the existing String object, a new String object is created with modifications.
 Existing object is not at all altered. 
Where as java.lang.StringBuffer and java.lang.StringBuilder objects are mutable. 
That means, you can perform modifications to existing objects.

4) In all three classes, toString() method is overrided. 

5)In case of String class, you can create the objects without new operator keyword.
 But in case of StringBuffer and StringBuilder class, you have to use new operator to create the objects.

6)There are total 13 constructors in java.lang.String class. It provides many ways to create the string objects. 

